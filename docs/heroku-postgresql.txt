PostgreSQL by Heroku
====================

The Heroku PostgreSQL add-on is our next generation of our dedicated database service. Unlike the previous generation database service, it is provisioned and managed as an add-on.

NOTE: Please note that all of these database plans incur non-trivial charges.

Installation
------------

Make sure that you are running the latest version of the Heroku gem:

    $ sudo gem install heroku

Install the add-on. You can view the available plans using 'heroku addons:info | grep postgresql', or install the default plan (ronin):

    $ heroku addons:add heroku-postgresql

Migration of existing databases
-------------------------------

See the [migration documentation](/postgresql-migrate).

Specifying Databases
--------------------

Most database commands accept a --db flag, which allows you to set the database on which the command will perform. Databases are specified by the [config var](/config-vars) name (but not the value) or their URL. Common database URLs are DATABASE_URL, HEROKU_POSTGRESQL_RONIN_URL, and SHARED_DATABASE_URL. To see a list of available databases, use `heroku config`. 

If the --db flag is not specified, most commands will use DATABASE_URL by default.

Promotion and database URLs
---------------------------

Heroku stores database credentials (URL, name, username, and password) in [config vars](/config-vars). The DATABASE_URL config var will be used by rails applications as the default database. 

Every database (shared dbs, legacy dbs, and Heroku PostgreSQL dbs) has its url specified in a config var. Use these config vars to specify databases in our command-line tool.  Additionally all pg and pgbackups commands will use DATABASE_URL by default. 

The pg:promote command will set a particular database to be used as the default in your rails application and in the Heroku command-line tool. 

    $ heroku pg:promote --db HEROKU_POSTGRESQL_RONIN_URL
    Attatching database to myapp ... done

This is equivalent to using 'heroku config:add DATABASE_URL=...' 

PSQL Console
------------

If you have PostgreSQL [installed on your system](#local-postgresql-installation), you can open a direct [psql console](http://www.postgresql.org/docs/8.4/static/app-psql.html) to your remote db:

    $ heroku pg:psql
    Connecting to Heroku PostgreSQL database for app myapp ...
    psql (8.4.4, server 8.4.4)
    SSL connection (cipher: DHE-RSA-AES256-SHA, bits: 256)
    Type "help" for help.

    rd2lk8ev3jt5j50=>

As with other database command, this one will accept a --db flag allowing you to specific which database to use and it will use your DATABASE_URL by default.

Further reading: [PostgreSQL interactive terminal docs](http://www.postgresql.org/docs/8.4/static/app-psql.html)

Stored Procedures
-----------------

Heroku PosgreSQL supports stored procedures through the [PL/pgSQL language](http://www.postgresql.org/docs/8.4/interactive/plpgsql.html). 

See [this tutorial](http://nasir.wordpress.com/2007/12/03/stored-procedures-and-rails/) on implementing stored procedures in Ruby on Rails.

Ingress
-------

Your database is firewalled to enhance security, however, you can temporarily open access to your database. This can be used with GUI applications running on your local computer (e.g. pgadmin), for direct server-to-server access, or for any other purpose.

The pg:ingress command opens access for 60s to connect to the database from your current IP. Connections made during this period will remain active even after the firewall has been re-sealed. The command outputs the parameters needed to connect to your database.

    $ heroku pg:ingress
    Granting ingress to HEROKU_POSTGRESQL_KAPPA_URL for 60s... done
    Connection info string:
       "dbname=dnnnnnnnn host=ec2-123-123-123-123.compute-1.amazonaws.com user=uxxxxxxxxx password=pxxxxxxxxxxxxxxx"

As with other database command, this one will accept a --db flag allowing you to specific which database to use and it will use your DATABASE_URL by default.

Info
----

You can get stats on your database with the info command:

    $ heroku pg:info
    State:       running for 16 days
    Data size:   12MB in 5 tables
    URL:         postgres://abc:xyz@ec2-184-70-150-10.compute-1.amazonaws.com/abc
    PG version   8.4.4
    Born:        Jan 17 2010 12:30:43

As with other database command, this one will accept a --db flag allowing you to specific which database to use and it will use your DATABASE_URL by default.


Backup, restore, import, export 
-------------------------------

BRIE (backup, restore, import, and export) operations are handled with the [Heroku PG Backups add-on](http://addons.heroku.com/pgbackups). See the [documentation here](/pgbackups).

NOTE: Heroku bundles will not work with the Heroku PostgreSQL addon. You will need to use the Heroku PG Backups add-on instead.

Dropping all Data
-----------------

If you need to destroy all of the data in your database and start with a fresh schema, you can do so:
    
    $ heroku pg:reset
    
As with other database command, this one will accept a --db flag allowing you to specific which database to use and it will use your DATABASE_URL by default.

Local PostgreSQL Installation
-----------------------------

If you wish to use the optional psql console, you should have a current version of PostgreSQL installed.  (It's also a good idea to develop your app locally on Postgres instead of SQLite or MySQL, to avoid minor incompatibilities between SQL implementations.)  On OS X, you can use MacPorts:

    $ sudo port install postgresql84-server

Or use Homebrew:

    $ sudo brew install postgresql

To install on Ubuntu:

    $ sudo apt-get install postgresql\
    
Use the [postgresql installer](http://pginstaller.projects.postgresql.org/) or [cygwin](http://www.cygwin.com/) to install on windows.
