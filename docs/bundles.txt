Bundles
=======

NOTE: Bundles have been deprecated. (PGBackups)[/pgbackups] is the officially supported solution for backing up PostgreSQL databases on Heroku. We will continue to support capturing Bundles until 11/30/2010. Backups made with Bundles will continue to be available until 2/15/2010.

Heroku keeps system-wide backups of all apps on the platform, but these are only for recovery from the extremely unlike possibility of catastrophic system failure such as hardware failures.  If your app stores important data you, the app developer, should keep your own backups to handle cases such as bugs in your code causing corrupted or lost records in your database, or your users accidentally deleting data.  Heroku provides several tools to make this easy.

Capturing bundles
-----------------

A bundle is a tarball archive of the code, git repo, and a dump of your database.  If you have activated the free add-on Single Bundle, you can capture a bundle:

    :::term
    $ heroku bundles:capture --app myapp
    Began capturing bundle 2009-08-10 from myapp

If you wish to have more than one bundle at a time, you'll need to activate the Unlimited Bundles add-on.  You can also destroy the previous bundle and capture a new one.

Downloading bundles
-------------------

Capturing a bundle is the easiest way to back up your app, and serves as a baseline for app backups.  But if your app data is truly critical, you'll want to download the bundles you capture on a periodic basis in order to have your own copy that is completely outside the Heroku cloud.

Download your bundle like this:

    :::term
    $ heroku bundles:download --app myapp
    Downloaded 1250937 byte bundle myapp.tar.gz

The resulting tarball can then be placed in whatever long-term storage you wish to use.

Git + Taps
----------

An alternate approach to backing up your app is to separate the code and data transfers.  This is less efficient and less unified, but there are cases where you may find it preferable.

Backing up your code is essentially superfluous if you have any active developers on the app.  The reason is that Git is decentralized revision control, and thus every person who has a checkout of the app has the full history.  For example, if you have two developers, staging and production apps on Heroku, and a Github private repo, your code is stored in five different places, which you can think of as having four actively maintained backups.

You can then handle data backup using [Taps](/taps).  For example, the following will grab your latest database and turn it into local SQLite file:

    :::term
    $ heroku db:pull sqlite://myapp-backup.db --app myapp

You can then compress that file and put it wherever you keep your backups.  Using taps is substantially slower than the raw dumps included in bundles, so this may not be practical for frequent backups of very large databases.

