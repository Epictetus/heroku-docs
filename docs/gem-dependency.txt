Gem Dependency
==============

There is an issue affecting Rails 2.3.x apps from loading. If your Heroku app is affected you'll see this output on push:

    :::term
     ! We have detected a situation that may prevent your app from booting:
     ! Multiple versions of rack detected: 1.2.1, 1.0.1

     ! This issue is most often caused by one of your gems requiring rack.
     ! To resolve, switch to bundler and push again:
     ! http://docs.heroku.com/gem-dependency

     ! Heroku push rejected

Root Cause
----------

Rails encourages developers to pin their application to a specific Rails gem version through config/environment.rb. Versions [2.3.3][2.3.5] to [2.3.5][] use Rack ~> 1.0.0 and are incompatible with Rack >= 1.1.0, which is required by [later 2.3.x releases][2.3.9]. [Rails 3][3.0.0] requires rack 1.2.1 and newer which is incompatible with with any of the Rails 2 rack versions.

[2.3.5]: http://rubygems.org/gems/actionpack/versions/2.3.5
[2.3.9]: http://rubygems.org/gems/actionpack/versions/2.3.9
[3.0.0]: http://rubygems.org/gems/actionpack/versions/3.0.0

In addition to Rails itself, any gem required by your application may list its own set of dependencies. That way, when you install a gem, you will automatically get all _its_ required gems installed. For example, many gems written to be used in Rails apps may directly require some of Rails' underlying components such as [ActiveSupport][] or [ActionPack][]. Gem developers can require specific versions of these, or use syntax like "`>= 2.2`" - meaning that 2.2 or anything newer than version 2.2 will match.

[ActiveSupport]: http://as.rubyonrails.org/
[ActionPack]: http://ap.rubyonrails.org/

For gems that depend on Rails or any of its subcomponents, and do not pin to specific versions(formtastic and hobofields for example), Rubygems will pick up the dependency and install the latest version of Rails that matches the requirement (2.3.9 when using >= 2.2 as of this writing) _in addition_ to the older version of Rails specified in config/environment.rb. As part of this rather complex dependency resolution process, you will also get Rack 1.1.0 as Rails 2.3.6 and newer depend on it or rack 1.2.1 as Rails 3 depends on it.

    :::term
    $ rvm gemset create gem-dependency

    info: Gemset 'gem-dependency' created.
    $ rvm gemset use gem-dependency

    info: Now using gemset 'gem-dependency'
    $ gem install rails --version 2.3.5 --no-ri --no-rdoc
    https://blossom.campfirenow.com/room/269742 Successfully installed activesupport-2.3.5
    Successfully installed activerecord-2.3.5
    Successfully installed rack-1.0.1
    Successfully installed actionpack-2.3.5
    Successfully installed actionmailer-2.3.5
    Successfully installed activeresource-2.3.5
    Successfully installed rails-2.3.5
    7 gems installed

    $ gem install searchlogic --version=2.3.5 --no-ri --no-rdoc
    Successfully installed searchlogic-2.3.5
    Successfully installed activesupport-3.0.0
    Successfully installed builder-2.1.2
    Successfully installed i18n-0.4.1
    Successfully installed activemodel-3.0.0
    Successfully installed arel-1.0.1
    Successfully installed tzinfo-0.3.23
    7 gems installed
    $ gem list

    *** LOCAL GEMS ***

    actionmailer (2.3.5)
    actionpack (2.3.5)
    activemodel (3.0.0)
    activerecord (2.3.5)
    activeresource (2.3.5)
    activesupport (3.0.0, 2.3.5)
    arel (1.0.1)
    builder (2.1.2)
    i18n (0.4.1)
    rack (1.0.1)
    rails (2.3.5)
    rake (0.8.7)
    rdoc (2.5.8)
    searchlogic (2.3.5)
    tzinfo (0.3.23)


On Heroku we use [thin](http://code.macournoyer.com/thin/) as the application server for your Ruby web apps. When it's time to start your app we'll automatically launch thin, which first loads Rack and subsequently your application code. By design, thin will pull in any available versions of Rack, including 1.1.0. Because Rails 2.3.5 and older are incompatible with Rack 1.1.0 your application will fail to start, displaying the error outlined above. If you're running Rails 2.3.6 or later of the 2.3.x branch, you depend on Rack 1.1.0. Any gem that pulls in Rails 3 will pull in Rack 1.2.1, which like above will cause thin to load Rack 1.2.1 instead and will fail to start your Rails app.

If you're debugging this issue locally, you can reproduce it by making sure you're using thin to launch your app on your workstation or test server. Here's how you start your app with thin:

    $ gem install thin
    $ cd myapp
    $ thin start


Resolution
----------

### Use Bundler

If youâ€™re on the [Bamboo stack](http://docs.heroku.com/bamboo), use [Bundler](http://docs.heroku.com/bundler), which was designed to conclusively solve this type of dependency resolution problem.  See [migrating to
+Bamboo](http://docs.heroku.com/bundler).

If youâ€™re on the [Aspen stack](http://docs.heroku.com/aspen), you need to either [migrate to the Bamboo stack](http://docs.heroku.com/bamboo) and use [Bundler](http://docs.heroku.com/bundler), or follow the instructions below.

### Ignore dependencies for selected gems

If you suspect a particular gem is causing problems by requiring an unspecified version of actionpack or another component with a dependency on Rack, you can specify the "--ignore-dependencies" flag for that gem in your .gems manifest. This will tell rubygems not to load _any_ dependencies for that gem. Since you only want to ignore Rack, you will need to add other dependencies to your manifest. For example:

    formtastic --ignore-dependencies
    hobosupport
    hobofields --ignore-depedencies

You can inspect the dependencies for any gem with:

    $ gem dependency hobofields
    Gem hobofields-1.0.0
      hobosupport (= 1.0.0, runtime)
      rails (>= 2.2.2, runtime)

    $ gem dependency warden
    Gem warden-0.10.7
      rack (>= 1.0.0, runtime)
